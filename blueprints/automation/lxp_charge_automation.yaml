blueprint:
  name: Luxpower Off-Peak Charging Optimizer
  description: >-
    Automates charging from the grid during off-peak hours.
    This automation will:
    1. Trigger at the start of the off-peak window.
    2. Only run if the battery is below a user-defined starting SOC.
    3. Charge the battery towards a target SOC.
    4. Automatically stop and restore all settings if the off-peak window ends before charging is complete.
  domain: automation
  source_url: https://github.com/ant0nkr/luxpower-ha-integration/blob/main/blueprints/automation/lxp_charge_automation.yaml
  input:
    # --- Time & Trigger Settings ---
    off_peak_start_time:
      name: Off-Peak Start Time
      description: The time to start charging (e.g., 23:00).
      selector:
        time:
      default: "23:00:00"
    off_peak_end_time:
      name: Off-Peak End Time
      description: The time charging must be finished by (e.g., 07:00).
      selector:
        time:
      default: "07:00:00"
    start_charging_soc:
      name: Start Charging Below SOC
      description: Only start the process if the battery is below this SOC percentage.
      selector:
        number:
          min: 0
          max: 100
          unit_of_measurement: "%"
      default: 50
    ac_charge_target_soc:
      name: Target SOC
      description: The State of Charge percentage to charge the battery to.
      selector:
        number:
          min: 10
          max: 100
          unit_of_measurement: "%"
      default: 95
    ac_charge_current_value:
      name: AC Charge Current (Amps)
      description: The current (in Amps) to use for AC charging.
      selector:
        number:
          min: 1
          max: 100
          unit_of_measurement: A
      default: 20

    # --- Required Entities ---
    battery_soc_sensor:
      name: Battery SOC Sensor
      description: Sensor that reports the current battery SOC percentage.
      selector:
        entity:
          domain: sensor
          device_class: battery
    ac_charge_switch:
      name: AC Charge Switch
      description: The switch entity to enable/disable AC charging.
      selector:
        entity:
          domain: switch
    ac_charge_current_entity:
      name: AC Charge Current Entity
      description: The number entity to set the AC charge current.
      selector:
        entity:
          domain: number
    ac_charge_type_entity:
      name: AC Charge Type Entity
      description: The select entity to set the AC charge type.
      selector:
        entity:
          domain: select
    ac_charge_end_soc_entity:
      name: AC Charge End SOC Entity
      description: The number entity for setting the AC charge end SOC percentage.
      selector:
        entity:
          domain: number
    ac_charge_start_soc_entity:
      name: AC Charge Start SOC Entity
      description: The number entity for setting the AC charge start SOC percentage.
      selector:
        entity:
          domain: number

# This automation will only run one instance at a time.
mode: single

# Trigger the automation at the specified off-peak start time.
trigger:
  - platform: time
    at: !input off_peak_start_time

# Only proceed if the battery SOC is below the specified starting threshold.
condition:
  - condition: numeric_state
    entity_id: !input battery_soc_sensor
    below: !input start_charging_soc

action:
  # Step 1: Save a snapshot of the original inverter settings.
  - service: scene.create
    data:
      scene_id: luxpower_offpeak_snapshot
      snapshot_entities:
        - !input ac_charge_switch
        - !input ac_charge_current_entity
        - !input ac_charge_type_entity
        - !input ac_charge_end_soc_entity
        - !input ac_charge_start_soc_entity

  # Step 2: Configure the inverter for grid charging.
  - service: select.select_option
    target:
      entity_id: !input ac_charge_type_entity
    data:
      option: "According to SOC"
  - service: number.set_value
    target:
      entity_id: !input ac_charge_current_entity
    data:
      value: !input ac_charge_current_value
  - service: number.set_value
    target:
      entity_id: !input ac_charge_end_soc_entity
    data:
      value: !input ac_charge_target_soc
  - service: number.set_value
    target:
      entity_id: !input ac_charge_start_soc_entity
    data:
      value: !input ac_charge_target_soc

  # Step 3: Start charging.
  - delay: "00:00:02"
  - service: switch.turn_on
    target:
      entity_id: !input ac_charge_switch

  # Step 4: Wait for charging to complete OR for the off-peak window to end.
  - wait_for_trigger:
      - platform: numeric_state
        entity_id: !input battery_soc_sensor
        above: !input ac_charge_target_soc
      - platform: time
        at: !input off_peak_end_time

  # Step 5: Restore all original settings from the snapshot.
  # This step runs regardless of whether charging finished or was aborted by the time limit.
  - service: scene.turn_on
    target:
      entity_id: scene.luxpower_offpeak_snapshot